{"version":3,"file":"static/js/724.9df93256.chunk.js","mappings":"+NACA,EAAuB,uBAAvB,EAAqD,uBAArD,EAAoF,wBAApF,EAAoH,wBAApH,EAAqJ,yBAArJ,EAAoL,sB,SCKvKA,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,CAAAC,UACbC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAQH,SAAA,EACtBF,EAAAA,EAAAA,KAACM,EAAAA,GAAM,CAAAJ,UACLF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,gBAETC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUE,SAnBV,SAAAC,GACrBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBb,GACEc,EAAAA,EAAAA,IAAa,CACXC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACP,EAQ2DC,aAAa,MAAKjB,SAAA,EACrEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAASH,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOI,UAAWC,EAAUH,SAAC,UAC7BF,EAAAA,EAAAA,KAAA,SAAOI,UAAWC,EAAWe,KAAK,OAAOP,KAAK,OAAOQ,UAAQ,QAE/DlB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAASH,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOI,UAAWC,EAAUH,SAAC,WAC7BF,EAAAA,EAAAA,KAAA,SAAOI,UAAWC,EAAWe,KAAK,QAAQP,KAAK,QAAQQ,UAAQ,QAEjElB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAASH,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOI,UAAWC,EAAUH,SAAC,cAC7BF,EAAAA,EAAAA,KAAA,SACEI,UAAWC,EACXe,KAAK,WACLP,KAAK,WACLQ,UAAQ,QAGZrB,EAAAA,EAAAA,KAAA,UAAQI,UAAWC,EAAYe,KAAK,SAAQlB,SAAC,oBAOvD,C","sources":["webpack://react-homework-template/./src/Styles/Register.module.css?7c70","Pages/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Register_form__ERzcH\",\"wrap\":\"Register_wrap__mCtru\",\"label\":\"Register_label__NEPdF\",\"input\":\"Register_input__8Ql5Q\",\"button\":\"Register_button__P8tDl\",\"div\":\"Register_div__PJje4\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from '../Redux/OperationsAPI';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport css from '../Styles/Register.module.css';\n\nexport const Register = () => {\n  const dispatch = useDispatch();\n\n  const handleRegister = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    dispatch(\n      registerUser({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <HelmetProvider>\n      <div className={css.div}>\n        <Helmet>\n          <title>Register</title>\n        </Helmet>\n        <form className={css.form} onSubmit={handleRegister} autoComplete=\"off\">\n          <div className={css.wrap}>\n            <label className={css.label}>Name</label>\n            <input className={css.input} type=\"text\" name=\"name\" required />\n          </div>\n          <div className={css.wrap}>\n            <label className={css.label}>Email</label>\n            <input className={css.input} type=\"email\" name=\"email\" required />\n          </div>\n          <div className={css.wrap}>\n            <label className={css.label}>Password</label>\n            <input\n              className={css.input}\n              type=\"password\"\n              name=\"password\"\n              required\n            />\n          </div>\n          <button className={css.button} type=\"submit\">\n            Register\n          </button>\n        </form>\n      </div>\n    </HelmetProvider>\n  );\n};\n"],"names":["Register","dispatch","useDispatch","_jsx","HelmetProvider","children","_jsxs","className","css","Helmet","onSubmit","event","preventDefault","form","currentTarget","registerUser","name","elements","value","email","password","reset","autoComplete","type","required"],"sourceRoot":""}